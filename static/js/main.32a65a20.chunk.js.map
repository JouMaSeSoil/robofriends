{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","Scroll.js","components/ErrorBoundry.js","App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardComponent","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAceA,G,OAZF,SAAC,GAA0B,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC1B,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAK,QAAQC,IAAG,+BAA0BH,EAA1B,cACrB,gCACA,6BAAKF,IACD,4BAAIC,Y,gCCgBLK,EArBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAIVC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACpC,OACI,cAAC,EAAD,CAEIT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,MAQjB,OACI,8BACKH,KCLEI,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKV,UAAY,MAAjB,SACA,uBACAA,UAAa,mCACbW,KAAK,SACLC,YAAY,gBACZC,SAAYH,OCCLI,G,OAPA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAO,SAApE,SACKJ,EAAMK,aCgBJC,G,yDAlBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAIzB,OAAIG,KAAKJ,MAAMC,SACH,gEAELG,KAAKX,MAAMK,a,GAhBCQ,cCyDZC,E,kDA5CX,aAAe,IAAD,8BACV,gBAgBJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAhB1C,EAAKZ,MAAQ,CACTlB,OAAQ,GACR4B,YAAa,IAJP,E,gEAQO,IAAD,OAChBG,MAAM,8CAA8CC,MAAK,SAAAC,GACrD,OAAOA,EAASC,UAEfF,MAAK,SAAAG,GACF,EAAKZ,SAAS,CAAEvB,OAAQmC,S,+BAQ1B,IAAD,OACCC,EAAiBd,KAAKJ,MAAMlB,OAAOqC,QAAO,SAACrC,GAC7C,OAAQA,EAAOP,KAAK6C,cAAcC,SAAS,EAAKrB,MAAMU,YAAYU,kBAEtE,OAAiC,IAA7BhB,KAAKJ,MAAMlB,OAAOwC,OACX,4CAGH,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1B,OAAQoC,e,GApC5BZ,aCFHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACD,cAAC,EAAD,MAECC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.32a65a20.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ( { name, email, id} ) => {\r\n    return (\r\n        <div className=' bg-light-green dib br3 pa3 ma2 grow shadow-5 tc'>\r\n            <img alt ='photo' src={`https://robohash.org/${id}?100x100`}></img>\r\n            <div>\r\n            <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n\r\n   \r\n\r\n    const cardComponent = robots.map((user, i) => {\r\n        return (\r\n            <Card\r\n                key={i}\r\n                id={robots[i].id}\r\n                name={robots[i].name}\r\n                email={robots[i].email}\r\n            />\r\n        );\r\n    })\r\n\r\n    return (\r\n        <div >\r\n            {cardComponent}\r\n        </div >\r\n    )\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return (\r\n        <div className = 'pa2'>\r\n        <input \r\n        className  = 'pa3 ba b--green bg-lightest-blue'\r\n        type='search' \r\n        placeholder='search robots' \r\n        onChange = {searchChange}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;\r\n","import { Component } from \"react\";\r\nimport React  from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height:'450px'}}>\r\n            {props.children}\r\n        </div>\r\n        )\r\n};\r\nexport default Scroll;","import { render } from \"@testing-library/react\";\r\nimport React, { Component } from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return (<h1>OOOOooooops. thats is not good</h1>)\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\nexport default ErrorBoundry;","import React from \"react\";\r\nimport CardList from \"./CardList\";\r\nimport { robots } from \"./robots\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { Component } from \"react\";\r\nimport './App.css';\r\nimport Scroll from \"./Scroll\";\r\nimport ErrorBoundry from \"./components/ErrorBoundry\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users').then(response => {\r\n            return response.json();\r\n        })\r\n            .then(users => {\r\n                this.setState({ robots: users })\r\n            })\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        const filteredRobots = this.state.robots.filter((robots) => {\r\n            return (robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase()));\r\n        })\r\n        if (this.state.robots.length === 0) {\r\n            return <h1>Loading...</h1>;\r\n        } else {\r\n            return (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>Robo Friends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots={filteredRobots} />\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Card from './Card';\nimport App from \"./App\";\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport { robots } from './robots';\n\nReactDOM.render(\n  <React.StrictMode>\n <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}